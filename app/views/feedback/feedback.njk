{% from "back-link/macro.njk" import govukBackLink %}
{% from "radios/macro.njk" import govukRadios %}
{% from "character-count/macro.njk" import govukCharacterCount %}
{% from "button/macro.njk" import govukButton %}
{% from "input/macro.njk" import govukInput %}
{% from "error-summary/macro.njk" import govukErrorSummary %}
{% from "macro.njk" import pushToGoogleAnalyticsDataLayer %}

{% extends "layout.njk" %}

{% block pageTitle -%}
  {{ "Feedback" | pageTitle }}
{%- endblock %}

{% block beforeContent %}
  {{ super() }}

  {{ govukBackLink({
    text: "Back",
    href: data.backPathForHelpPages
  }) }}
{% endblock %}

{% block content %}
  {% if errors["spam-filter"] %}
    {{ govukErrorSummary({
      titleText: "There is a problem",
      errorList: [
        errors["spam-filter"],
        errors["feedback"]
      ]
    }) }}
    {{ pushToGoogleAnalyticsDataLayer("error_msg", errors["spam-filter"].text, "Errorshown") }}
  {% endif %}
  <div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds-from-desktop">
      <h1 class="govuk-heading-l">
        Give Feedback
      </h1>
      <form action="/feedback" method="post">
        {{ govukRadios({
          classes: "govuk-radios",
          idPrefix: "feedback",
          name: "feedback",
          fieldset: {
            legend: {
              text: "What was your experience of the service",
              isPageHeading: true,
              classes: "govuk-fieldset__legend--m"
            }
          },
          items: [
            {
              value: "very satisfactory",
              text: "Very Satisfactory",
              checked: data | feedbackExperience("very satisfactory")
            },
            {
              value: "satisfactory",
              text: "Satisfactory",
              checked: data | feedbackExperience("satisfactory")
            },
            {
              value: "neither satisfactory or dissatisfactory",
              text: "Neither Satisfactory or Dissatisfactory",
              checked: data | feedbackExperience("neither satisfactory or dissatisfactory")
            },
            {
              value: "dissatisfactory",
              text: "Dissatisfactory",
              checked: data | feedbackExperience("dissatisfactory")
            },
            {
              value: "very dissatisfactory",
              text: "Very Dissatisfactory",
              checked: data | feedbackExperience("very dissatisfactory")
            }
          ],
          errorMessage: {
              text: errors["feedback"].text
          } if errors["feedback"]
        }) }}

        {{ govukCharacterCount({
          id: "feedback-more-detail",
          name: "feedback-more-detail",
          maxlength: 1200,
          hint: {
            text: "Do not include any personal or financial information, for example your National Insurance or credit card numbers."
          },
          label: {
            text: "How can we improve this service?",
            classes: "govuk-label--m",
            isPageHeading: true
          }
        }) }}

        {{ govukInput({
          id: "spam-filter",
          name: "spam-filter",
          value: data["spam-filter"],
          label: {
            text: "To prove you are not a robot, please type YES.",
            classes: "govuk-label--m",
            isPageHeading: true
          },
          errorMessage: {
              text: errors["spam-filter"].text
          } if errors["spam-filter"]
        }) }}

        {{ govukButton({
          text: "Send Feedback",
          preventDoubleClick: true
        }) }}
      </form>
    </div>
  </div>
{% endblock %}
