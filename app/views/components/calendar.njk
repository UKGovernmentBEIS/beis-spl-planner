{% from "fieldset/macro.njk" import govukFieldset %}

{% macro leaveAndPayCheckboxes(data, parent) %}
  {% set minWeek = data | earliestPrimaryLeaveWeek %}
  {% set maxWeek = 52 %}
  {% set zeroWeekDate = (data | startDay | startOfWeek) %}
  {% set isBirth = (data | isBirth) %}
  {% set isAdoption = (data | isAdoption) %}
  {% set weekZeroName= (data | birthOrPlacement) %}
  <div class="govuk-form-group">
    {% call govukFieldset({
      legend: {
        html: "<h2 class=\"govuk-heading-m govuk-!-margin-0\">" + (data | parentName(parent) | capitalize) + "</h2>",
        classes: "govuk-fieldset__legend--m"
      }
    }) %}
      <div id="{{ parent }}-calendar-checkboxes" class="govuk-checkboxes" data-module="govuk-checkboxes">
        <div class="govuk-checkboxes" data-module="govuk-checkboxes">
          {% for i in range(minWeek, maxWeek + 1) %}
            {% set compulsoryLeave = (parent === 'primary' and isBirth and (i === 0 or i === 1)) %}
            {% set outOfRange = (parent === 'secondary' and i < 0) %}
            {% set leaveId = parent + '-leave_' + i %}
            {% set leaveName = parent + '[leave]' %}
            {% set payId = parent + '-pay_' + i %}
            {% set payName = parent + '[pay]' %}
            {% set date = (zeroWeekDate | offsetWeeks(i)) %}
            {% if (i === minWeek) or ((date | formatDate("D") | int) <= 7) %}
              <h3 class="govuk-heading-s govuk-!-padding-1 background-grey">
                {{ date | formatDate("MMMM YYYY") }}
              </h3>
            {% endif %}
            {% set legend %}
              <strong>
                {{ date | formatDate("D MMMM") }}
              </strong>
              {% if (i === 0) %}
                ({{ weekZeroName | capitalize }} week)
              {% else %}
                ({{ i | abs }} week{{ "s" if (i | abs) !== 1 }} {{ "before" if i < 0 else "after" }} {{ weekZeroName }})
              {% endif %}
            {% endset %}
            <div class="govuk-fieldset__legend--s govuk-!-font-weight-regular" role="group" aria-label="{{ legend }}">
              <div class="govuk-checkboxes__item">
                <input class="govuk-checkboxes__input" id="{{ leaveId }}" name="{{ leaveName }}" type="checkbox" value="{{ i }}"
                  data-parent="{{ parent }}" data-property="leave"
                  {{ 'checked' if (data | isWeekChecked(parent, 'leave', i)) }}
                  {{ 'disabled' if (compulsoryLeave or outOfRange) }}>
                {% if compulsoryLeave %}
                  {# Compulsory leave checkboxes are disabled, so we need to explicitly send the value. #}
                  <input type="hidden" name="primary[leave]" value="{{ i }}" />
                {% endif %}
                <label class="govuk-label govuk-checkboxes__label" for="{{ leaveId }}">
                  Taking leave
                </label>
              </div>
              {# We use the styling of conditionally revealed checkboxes, but have removed the actual conditional reveal. #}
              <div class="govuk-checkboxes__conditional">
                <div class="govuk-checkboxes__item">
                  <input class="govuk-checkboxes__input" id="{{ payId }}" name="{{ payName }}" type="checkbox" value="{{ i }}"
                    data-parent="{{ parent }}" data-property="pay"
                    {{ 'checked' if (data | isWeekChecked(parent, 'pay', i)) }}
                    {{ 'disabled' if outOfRange }}>
                  <label class="govuk-label govuk-checkboxes__label" for="{{ payId }}">
                    Paid
                  </label>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    {% endcall %}
  </div>
{% endmacro %}

{% macro calendar(data) %}
  {#
    These hidden checkboxes hold the state for the selected leave and pay weeks in the visual calendar.
    The Vue.js component manipulates the checkboxes and in turn updates its display when they are updated.
    The original intent was that the checkboxes would be visible in the no-JS case, but user testing
    showed this not to be a viable alternative.
    The result is that the checkbox backing is definitely a little convoluted, but at least now you
    know the reason that they exist!

    TODO: Refactor visual planner to POST the calendar data without use of the checkboxes.
  #}
  <div id="calendar-checkboxes"class="govuk-grid-row" style="display: none;">
    <div class="govuk-grid-column-one-half">
      {{ leaveAndPayCheckboxes(data, "primary") }}
    </div>
    <div class="govuk-grid-column-one-half">
      {{ leaveAndPayCheckboxes(data, "secondary") }}
    </div>
  </div>
  <div id="planner">
    {# JavaScript enhanced calendar component. See /app/assets/javascripts/planner.js and associated Vue components. #}
  </div>
{% endmacro %}
